// Mocks generated by Mockito 5.4.2 from annotations
// in lms_pptik/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i34;
import 'dart:typed_data' as _i35;

import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:lms_pptik/src/data/models/assignment/assignment.dart' as _i29;
import 'package:lms_pptik/src/data/models/badge_model/badge_model.dart' as _i8;
import 'package:lms_pptik/src/data/models/chat_model/chat_model.dart' as _i21;
import 'package:lms_pptik/src/data/models/chat_model/send_message_model.dart'
    as _i23;
import 'package:lms_pptik/src/data/models/conversation_model/conversation.dart'
    as _i20;
import 'package:lms_pptik/src/data/models/course_model.dart' as _i12;
import 'package:lms_pptik/src/data/models/event_model.dart' as _i10;
import 'package:lms_pptik/src/data/models/lesson_model/lesson.dart' as _i31;
import 'package:lms_pptik/src/data/models/materi_model/materi_model.dart'
    as _i13;
import 'package:lms_pptik/src/data/models/member_model.dart' as _i22;
import 'package:lms_pptik/src/data/models/notification_model.dart' as _i26;
import 'package:lms_pptik/src/data/models/pages.dart' as _i32;
import 'package:lms_pptik/src/data/models/quote_model.dart' as _i18;
import 'package:lms_pptik/src/data/models/resource_model/resource.dart' as _i33;
import 'package:lms_pptik/src/data/models/submission_status_model.dart' as _i30;
import 'package:lms_pptik/src/data/models/tag_model.dart' as _i17;
import 'package:lms_pptik/src/data/models/user_grade_model/user_grade_model.dart'
    as _i15;
import 'package:lms_pptik/src/data/models/user_model/user_model.dart' as _i14;
import 'package:lms_pptik/src/domain/repositories/auth_repository.dart' as _i4;
import 'package:lms_pptik/src/domain/repositories/badge_repository.dart' as _i7;
import 'package:lms_pptik/src/domain/repositories/calendar_repository.dart'
    as _i9;
import 'package:lms_pptik/src/domain/repositories/chat_repository.dart' as _i19;
import 'package:lms_pptik/src/domain/repositories/completion_repository.dart'
    as _i24;
import 'package:lms_pptik/src/domain/repositories/course_repository.dart'
    as _i11;
import 'package:lms_pptik/src/domain/repositories/mods_repository.dart' as _i28;
import 'package:lms_pptik/src/domain/repositories/notification_repository.dart'
    as _i25;
import 'package:lms_pptik/src/domain/repositories/quote_repository.dart'
    as _i16;
import 'package:lms_pptik/src/domain/repositories/user_repository.dart' as _i27;
import 'package:lms_pptik/src/utils/failures.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, void>>.value(
            _FakeEither_0<_i6.Failure, void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, void>>);
}

/// A class which mocks [BadgeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBadgeRepository extends _i1.Mock implements _i7.BadgeRepository {
  MockBadgeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i8.BadgeModel>>> getBadge() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBadge,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i8.BadgeModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i8.BadgeModel>>(
          this,
          Invocation.method(
            #getBadge,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i8.BadgeModel>>>);
  @override
  _i5.Future<String> getBadgeImage(_i8.BadgeModel? badge) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBadgeImage,
          [badge],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
}

/// A class which mocks [CalendarRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarRepository extends _i1.Mock
    implements _i9.CalendarRepository {
  MockCalendarRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i10.EventModel>>> getAllEvent() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllEvent,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i10.EventModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i10.EventModel>>(
          this,
          Invocation.method(
            #getAllEvent,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i10.EventModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> addEvent(
    _i10.EventModel? event,
    int? repeat,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addEvent,
          [
            event,
            repeat,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #addEvent,
            [
              event,
              repeat,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> deleteEvent(
    int? eventId,
    bool? deleteAllRepeated,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [
            eventId,
            deleteAllRepeated,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteEvent,
            [
              eventId,
              deleteAllRepeated,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> exportEvents(String? time) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportEvents,
          [time],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #exportEvents,
            [time],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [CourseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRepository extends _i1.Mock implements _i11.CourseRepository {
  MockCourseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>
      getRecentCourse() => (super.noSuchMethod(
            Invocation.method(
              #getRecentCourse,
              [],
            ),
            returnValue: _i5
                .Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i12.CourseModel>>(
              this,
              Invocation.method(
                #getRecentCourse,
                [],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>> getFilteredCourse(
          String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredCourse,
          [category],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i12.CourseModel>>(
          this,
          Invocation.method(
            #getFilteredCourse,
            [category],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>> searchCourse(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourse,
          [query],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i12.CourseModel>>(
          this,
          Invocation.method(
            #searchCourse,
            [query],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i12.CourseModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i13.MateriModel>>> getMateri(
          int? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMateri,
          [courseId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i13.MateriModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i13.MateriModel>>(
          this,
          Invocation.method(
            #getMateri,
            [courseId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i13.MateriModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i14.UserModel>>> getEnrolledUser(
          int? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEnrolledUser,
          [courseId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i14.UserModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i14.UserModel>>(
          this,
          Invocation.method(
            #getEnrolledUser,
            [courseId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i14.UserModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, void>> addCourseToFavorite(
          _i12.CourseModel? course) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCourseToFavorite,
          [course],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, void>>.value(
            _FakeEither_0<_i6.Failure, void>(
          this,
          Invocation.method(
            #addCourseToFavorite,
            [course],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, void>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i15.UserGradeModel>>> getUserGrade(
          int? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGrade,
          [courseId],
        ),
        returnValue: _i5
            .Future<_i2.Either<_i6.Failure, List<_i15.UserGradeModel>>>.value(
            _FakeEither_0<_i6.Failure, List<_i15.UserGradeModel>>(
          this,
          Invocation.method(
            #getUserGrade,
            [courseId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i15.UserGradeModel>>>);
}

/// A class which mocks [QuoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuoteRepository extends _i1.Mock implements _i16.QuoteRepository {
  MockQuoteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i17.TagModel>>> getTags() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTags,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i17.TagModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i17.TagModel>>(
          this,
          Invocation.method(
            #getTags,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i17.TagModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i18.QuoteModel>> getQuotes(String? tag) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuotes,
          [tag],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i18.QuoteModel>>.value(
            _FakeEither_0<_i6.Failure, _i18.QuoteModel>(
          this,
          Invocation.method(
            #getQuotes,
            [tag],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i18.QuoteModel>>);
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i19.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i20.ConversationModel>>>
      getConversations() => (super.noSuchMethod(
            Invocation.method(
              #getConversations,
              [],
            ),
            returnValue: _i5.Future<
                    _i2
                    .Either<_i6.Failure, List<_i20.ConversationModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i20.ConversationModel>>(
              this,
              Invocation.method(
                #getConversations,
                [],
              ),
            )),
          ) as _i5
              .Future<_i2.Either<_i6.Failure, List<_i20.ConversationModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i21.ChatModel>> getConversationMessage(
          int? conversationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversationMessage,
          [conversationId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i21.ChatModel>>.value(
            _FakeEither_0<_i6.Failure, _i21.ChatModel>(
          this,
          Invocation.method(
            #getConversationMessage,
            [conversationId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i21.ChatModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i22.MemberModel>> getMemberInfo(
          int? memberId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemberInfo,
          [memberId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, _i22.MemberModel>>.value(
                _FakeEither_0<_i6.Failure, _i22.MemberModel>(
          this,
          Invocation.method(
            #getMemberInfo,
            [memberId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i22.MemberModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i23.SendMessageModel>> sendInstantMessage(
    int? toUserId,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendInstantMessage,
          [
            toUserId,
            message,
          ],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, _i23.SendMessageModel>>.value(
                _FakeEither_0<_i6.Failure, _i23.SendMessageModel>(
          this,
          Invocation.method(
            #sendInstantMessage,
            [
              toUserId,
              message,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i23.SendMessageModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, int>> getUnreadMessageCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadMessageCount,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, int>>.value(
            _FakeEither_0<_i6.Failure, int>(
          this,
          Invocation.method(
            #getUnreadMessageCount,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, int>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> setFavoriteConversations(
          int? conversations) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFavoriteConversations,
          [conversations],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #setFavoriteConversations,
            [conversations],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> unsetFavoriteConversations(
          int? conversations) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsetFavoriteConversations,
          [conversations],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #unsetFavoriteConversations,
            [conversations],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i20.ConversationModel>>
      getConversationsBetweenUser(int? otheruserid) => (super.noSuchMethod(
            Invocation.method(
              #getConversationsBetweenUser,
              [otheruserid],
            ),
            returnValue: _i5
                .Future<_i2.Either<_i6.Failure, _i20.ConversationModel>>.value(
                _FakeEither_0<_i6.Failure, _i20.ConversationModel>(
              this,
              Invocation.method(
                #getConversationsBetweenUser,
                [otheruserid],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, _i20.ConversationModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> deleteConversations(
          int? conversationIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteConversations,
          [conversationIds],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #deleteConversations,
            [conversationIds],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> blockUser(int? blockedUserId) =>
      (super.noSuchMethod(
        Invocation.method(
          #blockUser,
          [blockedUserId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #blockUser,
            [blockedUserId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> unblockUser(int? unblockUserId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unblockUser,
          [unblockUserId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #unblockUser,
            [unblockUserId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [CompletionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompletionRepository extends _i1.Mock
    implements _i24.CompletionRepository {
  MockCompletionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> setCompletionStatus(
    int? cmId,
    int? completed,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCompletionStatus,
          [
            cmId,
            completed,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #setCompletionStatus,
            [
              cmId,
              completed,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [NotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRepository extends _i1.Mock
    implements _i25.NotificationRepository {
  MockNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i26.NotificationModel>>>
      getNotifications() => (super.noSuchMethod(
            Invocation.method(
              #getNotifications,
              [],
            ),
            returnValue: _i5.Future<
                    _i2
                    .Either<_i6.Failure, List<_i26.NotificationModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i26.NotificationModel>>(
              this,
              Invocation.method(
                #getNotifications,
                [],
              ),
            )),
          ) as _i5
              .Future<_i2.Either<_i6.Failure, List<_i26.NotificationModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, int>> getNotificationCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationCount,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, int>>.value(
            _FakeEither_0<_i6.Failure, int>(
          this,
          Invocation.method(
            #getNotificationCount,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, int>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> markAllNotificationAsRead() =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllNotificationAsRead,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #markAllNotificationAsRead,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i27.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i14.UserModel>> getUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i14.UserModel>>.value(
            _FakeEither_0<_i6.Failure, _i14.UserModel>(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i14.UserModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> updatePicture(int? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePicture,
          [itemId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #updatePicture,
            [itemId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [ModAssignRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockModAssignRepository extends _i1.Mock
    implements _i28.ModAssignRepository {
  MockModAssignRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i29.AssignmentModel>>>
      getModAssignment(int? courseId) => (super.noSuchMethod(
            Invocation.method(
              #getModAssignment,
              [courseId],
            ),
            returnValue: _i5.Future<
                    _i2.Either<_i6.Failure, List<_i29.AssignmentModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i29.AssignmentModel>>(
              this,
              Invocation.method(
                #getModAssignment,
                [courseId],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, List<_i29.AssignmentModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i30.SubmissionStatusModel>>
      getSubmissionStatus(int? assignId) => (super.noSuchMethod(
            Invocation.method(
              #getSubmissionStatus,
              [assignId],
            ),
            returnValue: _i5.Future<
                    _i2.Either<_i6.Failure, _i30.SubmissionStatusModel>>.value(
                _FakeEither_0<_i6.Failure, _i30.SubmissionStatusModel>(
              this,
              Invocation.method(
                #getSubmissionStatus,
                [assignId],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, _i30.SubmissionStatusModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> submitSubmission(
    int? assignId,
    int? itemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitSubmission,
          [
            assignId,
            itemId,
          ],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #submitSubmission,
            [
              assignId,
              itemId,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> viewAssignment(int? assignId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewAssignment,
          [assignId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #viewAssignment,
            [assignId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [ModLessonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockModLessonRepository extends _i1.Mock
    implements _i28.ModLessonRepository {
  MockModLessonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i31.Lesson>>> getLessonByCourse(
          int? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLessonByCourse,
          [courseId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i31.Lesson>>>.value(
                _FakeEither_0<_i6.Failure, List<_i31.Lesson>>(
          this,
          Invocation.method(
            #getLessonByCourse,
            [courseId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i31.Lesson>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i31.Lesson>> getLesson(int? lessonId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLesson,
          [lessonId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i31.Lesson>>.value(
            _FakeEither_0<_i6.Failure, _i31.Lesson>(
          this,
          Invocation.method(
            #getLesson,
            [lessonId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i31.Lesson>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i32.PageLesson>>> getPages(
          int? lessonId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPages,
          [lessonId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i32.PageLesson>>>.value(
                _FakeEither_0<_i6.Failure, List<_i32.PageLesson>>(
          this,
          Invocation.method(
            #getPages,
            [lessonId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i32.PageLesson>>>);
}

/// A class which mocks [ModResourceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockModResourceRepository extends _i1.Mock
    implements _i28.ModResourceRepository {
  MockModResourceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<
      _i2.Either<_i6.Failure, List<_i33.ResourceModel>>> getResourceByCourse(
          int? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResourceByCourse,
          [courseId],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, List<_i33.ResourceModel>>>.value(
                _FakeEither_0<_i6.Failure, List<_i33.ResourceModel>>(
          this,
          Invocation.method(
            #getResourceByCourse,
            [courseId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, List<_i33.ResourceModel>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, bool>> viewResource(int? resourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewResource,
          [resourceId],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, bool>>.value(
            _FakeEither_0<_i6.Failure, bool>(
          this,
          Invocation.method(
            #viewResource,
            [resourceId],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, bool>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i34.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i3.Response>);
  @override
  _i5.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<_i35.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i35.Uint8List>.value(_i35.Uint8List(0)),
      ) as _i5.Future<_i35.Uint8List>);
  @override
  _i5.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
